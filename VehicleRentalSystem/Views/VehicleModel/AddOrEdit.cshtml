@model VehicleRentalSystem.ViewModels.VehicleModelViewModel
@{
    Layout = null;
}

<!--Vehicle Model Modal-->
<div class="modal fade" id="addOrEditModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-gradient-primary">
                <h5 class="modal-title text-light" id="addOrEditModalLabel">Add New Vehicle Model</h5>
                <button id="close" class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div id="mbody" class="modal-body" style="padding-bottom:0px">
                <!--Vehicle Model Form-->
                @using (Html.BeginForm("AddOrEdit", "VehicleModel", FormMethod.Post, new { onsubmit = "return SubmitForm(this)", @class = "form-horizontal", id = "add" }))
                {
                    <div class="container">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.VehicleModel.VehicleModelId)

                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5 text-right font-weight-bold">
                                    @Html.LabelFor(model => model.VehicleModel.Name, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-sm-7 text-left">
                                    @Html.EditorFor(model => model.VehicleModel.Name, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.VehicleModel.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5 text-right font-weight-bold">
                                    @Html.LabelFor(model => model.VehicleModel.SeatingCapacity, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-sm-7 text-left">
                                    @Html.EditorFor(model => model.VehicleModel.SeatingCapacity, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.VehicleModel.SeatingCapacity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5 text-right font-weight-bold">
                                    @Html.LabelFor(model => model.VehicleModel.BagCapacity, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-sm-7 text-left">
                                    @Html.EditorFor(model => model.VehicleModel.BagCapacity, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.VehicleModel.BagCapacity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5 text-right font-weight-bold">
                                    @Html.LabelFor(model => model.VehicleModel.VehicleManufacturer.Name, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-sm-7 text-left">
                                    @Html.DropDownListFor(m => m.VehicleModel.VehicleManufacturer.VehicleManufacturerId, new SelectList(Model.VehicleManufacturers, "VehicleManufacturerId", "Name"), "Select Manufacturer", htmlAttributes: new { @class = "form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.VehicleModel.VehicleManufacturer.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5 text-right font-weight-bold">
                                    @Html.LabelFor(model => model.VehicleModel.VehicleType.Name, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-sm-7 text-left">
                                    @Html.DropDownListFor(m => m.VehicleModel.VehicleType.VehicleTypeId, new SelectList(Model.VehicleTypes, "VehicleTypeId", "Name"), "Select Type", htmlAttributes: new { @class = "form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.VehicleModel.VehicleType.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5 text-right font-weight-bold">
                                    @Html.LabelFor(model => model.VehicleModel.Automatic, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-sm-7 text-left">
                                    @Html.EditorFor(model => model.VehicleModel.Automatic, new { htmlAttributes = new { @class = "form-control-sm check-box" } })
                                    @Html.ValidationMessageFor(model => model.VehicleModel.Automatic, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-12 text-right align-content-center">
                            <div class="modal-footer">
                                <input type="Reset" value="Reset" class="btn btn-secondary" />
                                <input type="submit" value="Submit" class="btn btn-primary" />
                            </div>

                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

